package {{LowerCase .UsecaseName}}

import (
	"context"
	"testing"

	"{{.PackagePath}}/domain_{{.DomainName}}/model/entity"
)

type mockOutport{{PascalCase .TestName}} struct {
    t *testing.T
}

// TestCase{{PascalCase .TestName}} is for the case where ...
// explain the purpose of this test here with human readable naration...
func TestCase{{PascalCase .TestName}}(t *testing.T) {

	ctx := context.Background()

	mockOutport := mockOutport{{PascalCase .TestName}}{
	    t: t,
	}

	res, err := NewUsecase(&mockOutport).Execute(ctx, InportRequest{
	})

	if err != nil {
		t.Errorf("%v", err.Error())
		t.FailNow()
	}

	t.Logf("%v", res)

}

{{range .Methods}}
func (r *mockOutport{{PascalCase $.TestName}}) {{.MethodName}}{{.MethodSignature}} {

    return {{.DefaultReturnVal}}
}
{{end}}
